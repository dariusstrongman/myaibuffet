name: Regenerate Articles with SEO Enhancements

# Runs automatically when articles or scripts are updated
# Also allows manual trigger for one-time regeneration
on:
  # Automatic trigger: when article scripts or articles change
  push:
    branches:
      - main
    paths:
      - 'scripts/generate-article-pages.js'
      - 'scripts/seo-enhancements.js'
      - 'articles/rss/**'

  # Manual trigger: for one-time regeneration or testing
  workflow_dispatch:
    inputs:
      confirm:
        description: 'Type "REGENERATE" to confirm (or leave default)'
        required: false
        default: 'REGENERATE'

jobs:
  regenerate-articles:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check trigger type
        run: |
          # Prevent infinite loop: Don't run if last commit was SEO regeneration
          LAST_COMMIT_MSG=$(git log -1 --pretty=format:'%s')
          if [[ "$LAST_COMMIT_MSG" == *"SEO Enhancement: Regenerate articles"* ]]; then
            echo "🔄 Last commit was SEO regeneration - skipping to prevent loop"
            echo "ℹ️  Articles are already up to date with SEO enhancements"
            exit 0
          fi

          if [ "${{ github.event_name }}" = "push" ]; then
            echo "🤖 Triggered automatically by push to main branch"
            echo "📝 Articles or scripts were updated - regenerating with SEO enhancements"
          elif [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            if [ "${{ github.event.inputs.confirm }}" != "REGENERATE" ]; then
              echo "❌ Manual trigger requires 'REGENERATE' confirmation"
              exit 1
            fi
            echo "👤 Triggered manually - regenerating all articles"
          fi
          echo "✅ Trigger verified"

      - name: Backup existing articles
        run: |
          echo "📦 Creating backup..."
          BACKUP_DIR="articles/rss_backup_$(date +%Y%m%d_%H%M%S)"
          mkdir -p "$BACKUP_DIR"
          cp -r articles/rss/*.html "$BACKUP_DIR/" 2>/dev/null || echo "No existing articles to backup"
          echo "✅ Backup created at: $BACKUP_DIR"
          echo "BACKUP_DIR=$BACKUP_DIR" >> $GITHUB_ENV

      - name: Remove old articles
        run: |
          echo "🗑️  Removing old articles to trigger regeneration..."
          rm -f articles/rss/*.html
          echo "✅ Old articles removed"

      - name: Regenerate articles with SEO enhancements
        run: |
          echo "🔄 Regenerating all articles with enhanced SEO..."
          npm run generate-articles
          echo "✅ Regeneration complete!"

      - name: Check generated files
        run: |
          ARTICLE_COUNT=$(find articles/rss -name "*.html" -type f | wc -l)
          echo "📊 Generated $ARTICLE_COUNT article pages"

          if [ "$ARTICLE_COUNT" -lt 800 ]; then
            echo "⚠️  Warning: Expected ~900+ articles, but only generated $ARTICLE_COUNT"
            echo "This might indicate an issue. Please check logs."
          else
            echo "✅ Article count looks good!"
          fi

      - name: Commit and push changes
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"

          git add articles/rss/
          git add sitemap.xml

          # Check if there are changes to commit
          if git diff --staged --quiet; then
            echo "ℹ️  No changes to commit (all articles already up to date)"
          else
            git commit -m "🚀 SEO Enhancement: Regenerate articles with reading time, related articles, and enhanced schemas

            - Added reading time calculator
            - Implemented smart related articles matching
            - Enhanced structured data (Article + Breadcrumb schemas)
            - Improved internal linking
            - Better SEO signals for Google

            Generated by GitHub Actions workflow"

            git push
            echo "✅ Changes pushed to GitHub!"
          fi

      - name: Summary
        run: |
          echo ""
          echo "╔═══════════════════════════════════════════════════╗"
          echo "║                                                   ║"
          echo "║  ✅ SEO REGENERATION COMPLETE!                    ║"
          echo "║                                                   ║"
          echo "╚═══════════════════════════════════════════════════╝"
          echo ""
          echo "📊 What was done:"
          echo "   • Backed up existing articles"
          echo "   • Regenerated all articles with:"
          echo "     ✓ Reading time badges"
          echo "     ✓ Smart related articles"
          echo "     ✓ Enhanced structured data"
          echo "     ✓ Breadcrumb navigation"
          echo ""
          echo "🚀 Your articles now have enterprise-level SEO!"
          echo ""
          echo "📈 Expected results:"
          echo "   • 20-30% higher CTR (rich snippets)"
          echo "   • Lower bounce rate (related articles)"
          echo "   • Better rankings (internal linking)"
          echo ""
          echo "🔍 Next steps:"
          echo "   1. Wait for GitHub Pages to deploy (~2-5 min)"
          echo "   2. Test: https://myaibuffet.com/articles/rss/"
          echo "   3. Verify rich results: https://search.google.com/test/rich-results"
          echo "   4. Monitor Google Search Console"
          echo ""
